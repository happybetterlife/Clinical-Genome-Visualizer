# Nginx Configuration for Clinical Genome Visualizer
# Production-ready with SSL, compression, caching, and security

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Custom MIME types for scientific formats
    types {
        chemical/x-pdb                        pdb;
        chemical/x-cif                        cif;
        chemical/x-mmcif                      mmcif;
        application/x-vcf                     vcf;
        application/x-gff                     gff gff3;
        application/x-bed                     bed;
        application/x-bam                     bam;
        application/x-sam                     sam;
        text/x-fasta                          fa fasta fas;
        application/json                      json;
        application/javascript                js;
        text/css                              css;
    }
    
    # Charset
    charset utf-8;
    
    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    log_format json escape=json '{'
                    '"timestamp":"$time_iso8601",'
                    '"remote_addr":"$remote_addr",'
                    '"request":"$request",'
                    '"status":$status,'
                    '"body_bytes_sent":$body_bytes_sent,'
                    '"request_time":$request_time,'
                    '"upstream_response_time":"$upstream_response_time",'
                    '"user_agent":"$http_user_agent",'
                    '"referer":"$http_referer"'
                    '}';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # File upload limits for genomic data
    client_max_body_size 1G;        # Large VCF/BAM files
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Proxy settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 8k;
    proxy_buffers 16 8k;
    proxy_busy_buffers_size 16k;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/rss+xml
        application/atom+xml
        image/svg+xml
        text/x-js
        text/x-cross-domain-policy
        application/x-font-ttf
        application/x-font-opentype
        application/vnd.ms-fontobject
        image/x-icon
        chemical/x-pdb
        chemical/x-cif
        application/x-vcf;
    
    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    
    # Content Security Policy for scientific applications
    add_header Content-Security-Policy "default-src 'self'; 
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; 
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; 
        font-src 'self' https://fonts.gstatic.com; 
        img-src 'self' data: https:; 
        connect-src 'self' https: wss: ws:; 
        worker-src 'self' blob:; 
        child-src 'self' blob:;" always;
    
    # HSTS (uncomment for HTTPS)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=analysis:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=download:10m rate=5r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Cache settings
    proxy_cache_path /var/cache/nginx/cache
                     levels=1:2
                     keys_zone=cache:10m
                     max_size=1g
                     inactive=60m
                     use_temp_path=off;
    
    # Map for caching API responses
    map $request_uri $no_cache {
        ~*/api/structures/  0;  # Cache structure data
        ~*/api/annotations/ 0;  # Cache annotation data
        default             1;  # Don't cache by default
    }
    
    # Upstream backend servers
    upstream backend {
        least_conn;
        server backend:8000 max_fails=3 fail_timeout=30s weight=1;
        # Add more backend servers for load balancing
        # server backend2:8000 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Upstream for analysis workers
    upstream analysis_workers {
        server analysis-worker-1:8001 max_fails=3 fail_timeout=30s;
        server analysis-worker-2:8001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HTTP server - redirect to HTTPS in production
    server {
        listen 80;
        listen [::]:80;
        server_name localhost genome-visualizer.com *.genome-visualizer.com;
        
        # Security headers even for HTTP
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Health check endpoint (don't redirect)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/letsencrypt;
            try_files $uri =404;
        }
        
        # Redirect everything else to HTTPS in production
        # Uncomment the next line for production with SSL
        # return 301 https://$server_name$request_uri;
        
        # For development, serve directly from HTTP
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            
            # CORS headers for development
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
        }
        
        # Static assets with aggressive caching
        location ~* \.(jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin *;
            
            # Serve from cache if available
            try_files $uri =404;
        }
        
        # CSS and JS with versioning
        location ~* \.(css|js)$ {
            root /usr/share/nginx/html;
            expires 30d;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin *;
            
            # Add version based on file modification
            try_files $uri =404;
        }
        
        # API endpoints
        location /api {
            limit_req zone=api burst=20 nodelay;
            limit_conn perip 10;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # Standard proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            
            # API-specific headers
            proxy_set_header X-Request-ID $request_id;
            proxy_set_header X-Request-Start $msec;
            
            # Buffering settings for API
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Cache configuration
            proxy_cache cache;
            proxy_cache_bypass $no_cache;
            proxy_no_cache $no_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            
            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # File upload endpoint with special handling
        location /api/upload {
            limit_req zone=upload burst=5 nodelay;
            limit_conn perip 3;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # Headers for file upload
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Upload-specific timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable caching for uploads
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_cache off;
        }
        
        # Analysis endpoints with longer timeouts
        location /api/analyze {
            limit_req zone=analysis burst=3 nodelay;
            limit_conn perip 2;
            
            proxy_pass http://analysis_workers;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Long timeouts for analysis
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            
            proxy_buffering off;
            proxy_request_buffering off;
        }
        
        # WebSocket connections
        location /ws {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            # WebSocket upgrade headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Long timeouts for WebSocket
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
            
            # Disable buffering for real-time communication
            proxy_buffering off;
        }
        
        # Molecular visualization with Mol* viewer
        location /molstar {
            alias /usr/share/nginx/html/molstar;
            try_files $uri $uri/ =404;
            
            # Cache Mol* assets
            location ~* \.(js|css|wasm)$ {
                expires 30d;
                add_header Cache-Control "public";
                add_header Access-Control-Allow-Origin *;
            }
        }
        
        # Scientific file formats with proper headers
        location ~* \.(pdb|cif|mmcif|vcf|gff|gff3|bed|bam|sam|fa|fasta|fas)$ {
            root /usr/share/nginx/html;
            
            # Set appropriate MIME types
            location ~* \.pdb$ {
                add_header Content-Type "chemical/x-pdb";
            }
            location ~* \.(cif|mmcif)$ {
                add_header Content-Type "chemical/x-cif";
            }
            location ~* \.vcf$ {
                add_header Content-Type "application/x-vcf";
            }
            location ~* \.(gff|gff3)$ {
                add_header Content-Type "application/x-gff";
            }
            location ~* \.bed$ {
                add_header Content-Type "application/x-bed";
            }
            location ~* \.(fa|fasta|fas)$ {
                add_header Content-Type "text/x-fasta";
            }
            
            # CORS for cross-origin access
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            add_header Access-Control-Expose-Headers "Content-Length, Content-Range";
            
            # Enable range requests for large files
            add_header Accept-Ranges bytes;
            
            # Cache scientific files
            expires 1h;
            add_header Cache-Control "public";
        }
        
        # File downloads with rate limiting
        location /downloads {
            limit_req zone=download burst=10 nodelay;
            limit_conn perip 5;
            
            alias /var/www/downloads;
            
            # Security: prevent directory listing
            autoindex off;
            
            # Add download headers
            add_header Content-Disposition "attachment";
            add_header X-Content-Type-Options "nosniff";
            
            # Cache downloads briefly
            expires 5m;
        }
        
        # Admin interface (restrict access)
        location /admin {
            # Restrict to internal networks
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            proxy_pass http://backend/admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Monitoring endpoints
        location /metrics {
            # Restrict to monitoring systems
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_pass http://backend/metrics;
            proxy_set_header Host $host;
        }
        
        # Nginx status for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html/errors;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html/errors;
            internal;
        }
        
        # Security: Hide sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTPS server (production configuration)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name genome-visualizer.com www.genome-visualizer.com;
        
        # SSL certificates (update paths for your certificates)
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;
        
        # SSL optimizations
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Security headers for HTTPS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # Root and index
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Include all the same location blocks as HTTP server
        # (Copy all location blocks from the HTTP server above)
        
        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # API with HTTPS-specific settings
        location /api {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            
            # Add security headers
            proxy_hide_header X-Powered-By;
        }
        
        # Add all other location blocks here...
        # (Same as HTTP server but with HTTPS-specific headers)
    }
    
    # Redirect www to non-www (or vice versa)
    server {
        listen 443 ssl http2;
        server_name www.genome-visualizer.com;
        
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        
        return 301 https://genome-visualizer.com$request_uri;
    }
    
    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/default.pem;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        ssl_reject_handshake on;
        
        return 444;  # Close connection without response
    }
}